diff -up mplayer-export-2015-05-05/ffmpeg/libavformat/internal.h.ffmpeg mplayer-export-2015-05-05/ffmpeg/libavformat/internal.h
--- mplayer-export-2015-05-05/ffmpeg/libavformat/internal.h.ffmpeg	2015-05-06 07:22:42.640716026 +0200
+++ mplayer-export-2015-05-05/ffmpeg/libavformat/internal.h	2015-05-06 07:26:44.614138993 +0200
@@ -0,0 +1,84 @@
+/*
+ * copyright (c) 2001 Fabrice Bellard
+ *
+ * This file is part of FFmpeg.
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#ifndef AVFORMAT_INTERNAL_H
+#define AVFORMAT_INTERNAL_H
+
+#include <stdint.h>
+#include <libavformat/avformat.h>
+
+typedef struct AVCodecTag {
+    enum AVCodecID id;
+    unsigned int tag;
+} AVCodecTag;
+
+struct AVFormatInternal {
+    /**
+     * Number of streams relevant for interleaving.
+     * Muxing only.
+     */
+    int nb_interleaved_streams;
+
+    /**
+     * This buffer is only needed when packets were already buffered but
+     * not decoded, for example to get the codec parameters in MPEG
+     * streams.
+     */
+    struct AVPacketList *packet_buffer;
+    struct AVPacketList *packet_buffer_end;
+
+    /* av_seek_frame() support */
+    int64_t data_offset; /**< offset of the first packet */
+
+    /**
+     * Raw packets from the demuxer, prior to parsing and decoding.
+     * This buffer is used for buffering packets until the codec can
+     * be identified, as parsing cannot be done without knowing the
+     * codec.
+     */
+    struct AVPacketList *raw_packet_buffer;
+    struct AVPacketList *raw_packet_buffer_end;
+    /**
+     * Packets split by the parser get queued here.
+     */
+    struct AVPacketList *parse_queue;
+    struct AVPacketList *parse_queue_end;
+    /**
+     * Remaining size available for raw_packet_buffer, in bytes.
+     */
+#define RAW_PACKET_BUFFER_SIZE 2500000
+    int raw_packet_buffer_remaining_size;
+
+    /**
+     * Offset to remap timestamps to be non-negative.
+     * Expressed in timebase units.
+     * @see AVStream.mux_ts_offset
+     */
+    int64_t offset;
+
+    /**
+     * Timebase for the timestamp offset.
+     */
+    AVRational offset_timebase;
+
+    int inject_global_side_data;
+};
+
+#endif /* AVFORMAT_INTERNAL_H */
diff -up mplayer-export-2015-05-05/Makefile.ffmpeg mplayer-export-2015-05-05/Makefile
--- mplayer-export-2015-05-05/Makefile.ffmpeg	2015-05-06 07:22:42.638716016 +0200
+++ mplayer-export-2015-05-05/Makefile	2015-05-06 07:22:42.642716037 +0200
@@ -754,7 +754,7 @@ mencoder$(EXESUF) mplayer$(EXESUF):
 codec-cfg-test$(EXESUF): HOSTCFLAGS := $(HOSTCFLAGS) -DTESTING
 codec-cfg$(EXESUF) codecs2html$(EXESUF):  HOSTCFLAGS := $(HOSTCFLAGS) -DCODECS2HTML
 codec-cfg$(EXESUF) codec-cfg-test$(EXESUF) codecs2html$(EXESUF): codec-cfg.c codec-cfg.h help_mp.h
-	$(HOST_CC) $(HOSTCFLAGS) -o $@ $<
+	$(HOST_CC) $(HOSTCFLAGS) $(CFLAGS)-o $@ $<
 
 codecs.conf.h: codec-cfg$(EXESUF) etc/codecs.conf
 	./$^ > $@
